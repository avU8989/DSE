
package dse.univie.ac.at;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import jakarta.xml.ws.Service;
import jakarta.xml.ws.WebEndpoint;
import jakarta.xml.ws.WebServiceClient;
import jakarta.xml.ws.WebServiceException;
import jakarta.xml.ws.WebServiceFeature;


/**
 * This class was generated by the XML-WS Tools.
 * XML-WS Tools 4.0.1
 * Generated source version: 3.0
 * 
 */
@WebServiceClient(name = "BankingService", targetNamespace = "dse.univie.ac.at", wsdlLocation = ":classpath:dse.wsdl")
public class BankingService_Service
    extends Service
{

    private static final URL BANKINGSERVICE_WSDL_LOCATION;
    private static final WebServiceException BANKINGSERVICE_EXCEPTION;
    private static final QName BANKINGSERVICE_QNAME = new QName("dse.univie.ac.at", "BankingService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = BankingService_Service.class.getClassLoader().getResource("dse.wsdl");
            if (url == null) {
                throw new IllegalStateException("WSDL file not found in resources");
            }
        } catch (Exception ex) {
            e = new WebServiceException(ex);
        }
        BANKINGSERVICE_WSDL_LOCATION = url;
        BANKINGSERVICE_EXCEPTION = e;
    }

    public BankingService_Service() {
        super(__getWsdlLocation(), BANKINGSERVICE_QNAME);
    }

    public BankingService_Service(WebServiceFeature... features) {
        super(__getWsdlLocation(), BANKINGSERVICE_QNAME, features);
    }

    public BankingService_Service(URL wsdlLocation) {
        super(wsdlLocation, BANKINGSERVICE_QNAME);
    }

    public BankingService_Service(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, BANKINGSERVICE_QNAME, features);
    }

    public BankingService_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public BankingService_Service(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns BankingService
     */
    @WebEndpoint(name = "BankingService")
    public BankingService getBankingService() {
        return super.getPort(new QName("dse.univie.ac.at", "BankingService"), BankingService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns BankingService
     */
    @WebEndpoint(name = "BankingService")
    public BankingService getBankingService(WebServiceFeature... features) {
        return super.getPort(new QName("dse.univie.ac.at", "BankingService"), BankingService.class, features);
    }

    private static URL __getWsdlLocation() {
        if (BANKINGSERVICE_EXCEPTION!= null) {
            throw BANKINGSERVICE_EXCEPTION;
        }
        return BANKINGSERVICE_WSDL_LOCATION;
    }

}
