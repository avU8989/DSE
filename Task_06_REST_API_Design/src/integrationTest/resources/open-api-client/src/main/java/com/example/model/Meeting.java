/*
 * Meeting Scheduler API
 * API for scheduling and managing meetings with multiple proposed time slots.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.example.model;

import java.util.Objects;
import java.util.Arrays;
import com.example.model.Attendee;
import com.example.model.Timeslot;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Meeting
 */
@JsonPropertyOrder({
  Meeting.JSON_PROPERTY_ID,
  Meeting.JSON_PROPERTY_SCHEDULE_NAME,
  Meeting.JSON_PROPERTY_DESCRIPTION,
  Meeting.JSON_PROPERTY_CREATOR,
  Meeting.JSON_PROPERTY_CREATED,
  Meeting.JSON_PROPERTY_VALID_UNTIL,
  Meeting.JSON_PROPERTY_TIMESLOTS,
  Meeting.JSON_PROPERTY_RESPONSES
})
@JsonTypeName("Meeting")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-04T01:04:18.517807200+02:00[Europe/Vienna]")
public class Meeting {
  public static final String JSON_PROPERTY_ID = "id";
  private UUID id;

  public static final String JSON_PROPERTY_SCHEDULE_NAME = "scheduleName";
  private String scheduleName;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_CREATOR = "creator";
  private String creator;

  public static final String JSON_PROPERTY_CREATED = "created";
  private OffsetDateTime created;

  public static final String JSON_PROPERTY_VALID_UNTIL = "validUntil";
  private OffsetDateTime validUntil;

  public static final String JSON_PROPERTY_TIMESLOTS = "timeslots";
  private List<Timeslot> timeslots = null;

  public static final String JSON_PROPERTY_RESPONSES = "responses";
  private List<Attendee> responses = null;

  public Meeting() { 
  }

  @JsonCreator
  public Meeting(
    @JsonProperty(JSON_PROPERTY_ID) UUID id
  ) {
    this();
    this.id = id;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getId() {
    return id;
  }




  public Meeting scheduleName(String scheduleName) {
    
    this.scheduleName = scheduleName;
    return this;
  }

   /**
   * Get scheduleName
   * @return scheduleName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_SCHEDULE_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getScheduleName() {
    return scheduleName;
  }


  @JsonProperty(JSON_PROPERTY_SCHEDULE_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setScheduleName(String scheduleName) {
    this.scheduleName = scheduleName;
  }


  public Meeting description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public Meeting creator(String creator) {
    
    this.creator = creator;
    return this;
  }

   /**
   * Get creator
   * @return creator
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_CREATOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCreator() {
    return creator;
  }


  @JsonProperty(JSON_PROPERTY_CREATOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreator(String creator) {
    this.creator = creator;
  }


  public Meeting created(OffsetDateTime created) {
    
    this.created = created;
    return this;
  }

   /**
   * Get created
   * @return created
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_CREATED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getCreated() {
    return created;
  }


  @JsonProperty(JSON_PROPERTY_CREATED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreated(OffsetDateTime created) {
    this.created = created;
  }


  public Meeting validUntil(OffsetDateTime validUntil) {
    
    this.validUntil = validUntil;
    return this;
  }

   /**
   * Get validUntil
   * @return validUntil
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_VALID_UNTIL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getValidUntil() {
    return validUntil;
  }


  @JsonProperty(JSON_PROPERTY_VALID_UNTIL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setValidUntil(OffsetDateTime validUntil) {
    this.validUntil = validUntil;
  }


  public Meeting timeslots(List<Timeslot> timeslots) {
    
    this.timeslots = timeslots;
    return this;
  }

  public Meeting addTimeslotsItem(Timeslot timeslotsItem) {
    if (this.timeslots == null) {
      this.timeslots = new ArrayList<>();
    }
    this.timeslots.add(timeslotsItem);
    return this;
  }

   /**
   * Get timeslots
   * @return timeslots
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TIMESLOTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Timeslot> getTimeslots() {
    return timeslots;
  }


  @JsonProperty(JSON_PROPERTY_TIMESLOTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTimeslots(List<Timeslot> timeslots) {
    this.timeslots = timeslots;
  }


  public Meeting responses(List<Attendee> responses) {
    
    this.responses = responses;
    return this;
  }

  public Meeting addResponsesItem(Attendee responsesItem) {
    if (this.responses == null) {
      this.responses = new ArrayList<>();
    }
    this.responses.add(responsesItem);
    return this;
  }

   /**
   * Get responses
   * @return responses
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_RESPONSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Attendee> getResponses() {
    return responses;
  }


  @JsonProperty(JSON_PROPERTY_RESPONSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setResponses(List<Attendee> responses) {
    this.responses = responses;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Meeting meeting = (Meeting) o;
    return Objects.equals(this.id, meeting.id) &&
        Objects.equals(this.scheduleName, meeting.scheduleName) &&
        Objects.equals(this.description, meeting.description) &&
        Objects.equals(this.creator, meeting.creator) &&
        Objects.equals(this.created, meeting.created) &&
        Objects.equals(this.validUntil, meeting.validUntil) &&
        Objects.equals(this.timeslots, meeting.timeslots) &&
        Objects.equals(this.responses, meeting.responses);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, scheduleName, description, creator, created, validUntil, timeslots, responses);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Meeting {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    scheduleName: ").append(toIndentedString(scheduleName)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    creator: ").append(toIndentedString(creator)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    validUntil: ").append(toIndentedString(validUntil)).append("\n");
    sb.append("    timeslots: ").append(toIndentedString(timeslots)).append("\n");
    sb.append("    responses: ").append(toIndentedString(responses)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

